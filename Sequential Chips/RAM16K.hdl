// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1], 
	    a=ad0,
	    b=ad1,
	    c=ad2,
	    d=ad3
    );

    // update registers
    RAM4K(in=in, load=ad0, address = address[2..13], out=o0);
    RAM4K(in=in, load=ad1, address = address[2..13], out=o1);
    RAM4K(in=in, load=ad2, address = address[2..13], out=o2);
    RAM4K(in=in, load=ad3, address = address[2..13], out=o3);


    // output correct register
    Mux4Way16(a=o0, b=o1, c=o2, d=o3, sel=address[0..1], out=out);
}
