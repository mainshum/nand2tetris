// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], 
	    a=ad0,
	    b=ad1,
	    c=ad2,
	    d=ad3,
	    e=ad4,
	    f=ad5,
	    g=ad6,
	    h=ad7
    );

    // update registers
    RAM512(in=in, load=ad0, address = address[3..11], out=o0);
    RAM512(in=in, load=ad1, address = address[3..11], out=o1);
    RAM512(in=in, load=ad2, address = address[3..11], out=o2);
    RAM512(in=in, load=ad3, address = address[3..11], out=o3);
    RAM512(in=in, load=ad4, address = address[3..11], out=o4);
    RAM512(in=in, load=ad5, address = address[3..11], out=o5);
    RAM512(in=in, load=ad6, address = address[3..11], out=o6);
    RAM512(in=in, load=ad7, address = address[3..11], out=o7);


    // output correct register
    Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[0..2], out=out);
}
